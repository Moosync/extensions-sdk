{
  "version": 3,
  "sources": ["../src/index.ts", "../src/api.ts", "../src/exports.ts"],
  "sourcesContent": ["// Moosync\n// Copyright (C) 2024, 2025  Moosync <support@moosync.app>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport type * from \"./types\";\nexport * from \"./exports\";\nexport * from \"./api\";\n", "// Moosync\n// Copyright (C) 2024, 2025  Moosync <support@moosync.app>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ExtensionAPI } from \"./types\";\n\nexport interface MoosyncExtensionTemplate {\n  onStarted: () => Promise<void>;\n}\n\nvar LISTENERS: Record<string, Function>;\n\nfunction camelToPascal(camelCaseStr: string) {\n  // Capitalize the first character and concatenate with the rest of the string\n  return camelCaseStr.charAt(0).toUpperCase() + camelCaseStr.slice(1);\n}\n\nexport const api: ExtensionAPI = new Proxy({} as ExtensionAPI, {\n  get: (_target, prop, _receiver) => {\n    if (prop === \"on\") {\n      return (eventName: string, callback: Function) => {\n        if (!LISTENERS) {\n          LISTENERS = {};\n        }\n        LISTENERS[eventName] = callback;\n      };\n    }\n\n    if (typeof prop === \"string\") {\n      return (arg: unknown) => {\n        const { send_main_command } = Host.getFunctions() as any;\n        let msg: string;\n        msg = JSON.stringify({ [camelToPascal(prop)]: arg ?? [] });\n        console.log(\"parsed ext command msg\", msg, prop, arg);\n        const mem = Memory.fromString(msg);\n        const offset = send_main_command(mem.offset);\n        const response = Memory.find(offset).readString();\n        return JSON.parse(response);\n      };\n    }\n\n    return undefined;\n  },\n});\n\nexport function callListener(event: string, ...args: unknown[]) {\n  if (LISTENERS && LISTENERS[event]) {\n    return Promise.resolve(LISTENERS[event](...args));\n  }\n}\n\nexport function open_sock(path: string) {\n  const { open_clientfd } = Host.getFunctions() as any;\n  const msg = Memory.fromString(path);\n  const offset = open_clientfd(msg.offset);\n  const response = Memory.find(offset).readString();\n  return JSON.parse(response);\n}\n\nexport function write_sock(sock_id: number, buf: string) {\n  const { write_sock } = Host.getFunctions() as any;\n  const msg = Memory.fromString(buf);\n  const offset = write_sock(sock_id, msg.offset);\n  const response = Memory.find(offset).readString();\n  return JSON.parse(response);\n}\n\nexport function read_sock(sock_id: number, read_len: number) {\n  const { read_sock } = Host.getFunctions() as any;\n  const offset = read_sock(sock_id, read_len);\n  const response = Memory.find(offset).readString();\n  return JSON.parse(response);\n}\n\nexport function hash(hash_type: \"SHA1\" | \"SHA256\" | \"SHA512\", data: string) {\n  const { hash } = Host.getFunctions() as any;\n  const hash_type_msg = Memory.fromString(hash_type);\n  const data_msg = Memory.fromString(data);\n  const offset = hash(hash_type_msg.offset, data_msg.offset);\n  const response = Memory.find(offset).readBytes();\n  return response;\n}\n", "// Moosync\n// Copyright (C) 2024, 2025  Moosync <support@moosync.app>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { callListener } from \"./api\";\n\nexport namespace Exports {\n  async function handleWrapper(event: string) {\n    const input = Host.inputString();\n    let params = undefined;\n    if (input) {\n      params = JSON.parse(input);\n    }\n\n    try {\n      let resp = await callListener(event, params);\n      if (typeof resp !== \"undefined\" || resp !== null) {\n        Host.outputString(JSON.stringify(resp));\n      } else {\n        Host.outputString(JSON.stringify(null));\n      }\n    } catch (err) {\n      console.error(\"caught err\", err);\n      Host.outputString(JSON.stringify(null));\n      return;\n    }\n  }\n\n  export function get_provider_scopes_wrapper() {\n    handleWrapper(\"getProviderScopes\");\n  }\n  export function get_playlists_wrapper() {\n    handleWrapper(\"getPlaylists\");\n  }\n  export function get_playlist_content_wrapper() {\n    handleWrapper(\"getPlaylistContent\");\n  }\n  export function get_playlist_from_url_wrapper() {\n    handleWrapper(\"getPlaylistFromUrl\");\n  }\n  export function get_playback_details_wrapper() {\n    handleWrapper(\"getPlaybackDetails\");\n  }\n  export function search_wrapper() {\n    handleWrapper(\"search\");\n  }\n  export function get_recommendations_wrapper() {\n    handleWrapper(\"getRecommendations\");\n  }\n  export function get_song_from_url_wrapper() {\n    handleWrapper(\"getSongFromUrl\");\n  }\n  export function handle_custom_request_wrapper() {\n    handleWrapper(\"handleCustomRequest\");\n  }\n  export function get_artist_songs_wrapper() {\n    handleWrapper(\"getArtistSongs\");\n  }\n  export function get_album_songs_wrapper() {\n    handleWrapper(\"getAlbumSongs\");\n  }\n  export function get_song_from_id_wrapper() {\n    handleWrapper(\"getSongFromId\");\n  }\n  export function on_queue_changed_wrapper() {\n    handleWrapper(\"onQueueChanged\");\n  }\n  export function on_volume_changed_wrapper() {\n    handleWrapper(\"onVolumeChanged\");\n  }\n  export function on_player_state_changed_wrapper() {\n    handleWrapper(\"onPlayerStateChanged\");\n  }\n  export function on_song_changed_wrapper() {\n    handleWrapper(\"onSongChanged\");\n  }\n  export function on_seeked_wrapper() {\n    handleWrapper(\"onSeeked\");\n  }\n  export function on_preferences_changed_wrapper() {\n    handleWrapper(\"onPreferencesChanged\");\n  }\n  export function on_song_added_wrapper() {\n    handleWrapper(\"onSongAdded\");\n  }\n  export function on_song_removed_wrapper() {\n    handleWrapper(\"onSongRemoved\");\n  }\n  export function on_playlist_added_wrapper() {\n    handleWrapper(\"onPlaylistAdded\");\n  }\n  export function on_playlist_removed_wrapper() {\n    handleWrapper(\"onPlaylistRemoved\");\n  }\n  export function get_accounts_wrapper() {\n    handleWrapper(\"getAccounts\");\n  }\n  export function perform_account_login_wrapper() {\n    handleWrapper(\"performAccountLogin\");\n  }\n  export function scrobble_wrapper() {\n    handleWrapper(\"scrobble\");\n  }\n  export function oauth_callback_wrapper() {\n    handleWrapper(\"oauthCallback\");\n  }\n  export function get_song_context_menu_wrapper() {\n    handleWrapper(\"getSongContextMenu\");\n  }\n  export function get_playlist_context_menu_wrapper() {\n    handleWrapper(\"getPlaylistContextMenu\");\n  }\n  export function on_context_menu_action_wrapper() {\n    handleWrapper(\"onContextMenuAction\");\n  }\n  export function get_lyrics_wrapper() {\n    handleWrapper(\"getLyrics\");\n  }\n}\n"],
  "mappings": "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",
  "names": ["write_sock", "read_sock", "hash", "Exports"]
}
